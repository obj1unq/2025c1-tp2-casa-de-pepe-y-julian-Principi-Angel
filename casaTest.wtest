import cuentasBancarias.*
import cosas.*
import casa.*

describe "Casa de Pepe y Julian"{

    test "Comprar una heladera, una cama y una placha"{
        casaDePepeYJulian.comprar(heladera)
        casaDePepeYJulian.comprar(cama)
        casaDePepeYJulian.comprar(plancha)
        assert.equals([heladera, cama, plancha], casaDePepeYJulian.cosas())
        assert.equals(3, casaDePepeYJulian.cantidadDeCosasCompradas())
        assert.that(casaDePepeYJulian.tieneAlgun(electrodomestico))
        assert.that(casaDePepeYJulian.tieneAlgun(mueble))
        assert.notThat(casaDePepeYJulian.tieneAlgun(comida))
        assert.that(casaDePepeYJulian.vieneDeComprar(electrodomestico))
        assert.notThat(casaDePepeYJulian.vieneDeComprar(mueble))
        assert.that(casaDePepeYJulian.esDerrochona())
        assert.equals(#{heladera, plancha}, casaDePepeYJulian.comprados(electrodomestico).asSet())
        assert.equals([cama], casaDePepeYJulian.comprados(mueble))
        assert.that(casaDePepeYJulian.comprados(comida).isEmpty())
        assert.notThat(casaDePepeYJulian.malaEpoca())
        assert.that(casaDePepeYJulian.queFaltaComprar([tiraDeAsado, plancha, paqueteDeFideos]) == [tiraDeAsado, paqueteDeFideos])
        assert.that(casaDePepeYJulian.faltaComida())
        assert.equals(#{electrodomestico, mueble}, casaDePepeYJulian.categor√≠asCompradas())
    }

    test "con cuenta corriente con $1000, se compra una tira de asado y un paquete de fideos, la cuenta queda con $600"{
        casaDePepeYJulian.cuentaSeleccionada(corriente)
        casaDePepeYJulian.cuentaSeleccionada().configuracionInicial(1000)
        casaDePepeYJulian.comprar(tiraDeAsado)
        casaDePepeYJulian.comprar(paqueteDeFideos)
        assert.equals(600, casaDePepeYJulian.cuentaSeleccionada().saldo()())
    }

}